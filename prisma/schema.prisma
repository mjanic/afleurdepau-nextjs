generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String   @db.VarChar(100)
  categoryId     String // Foreign Key to Category
  category       Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  parfumeId      String // Foreign Key to Parfume
  parfume        Parfume  @relation("ParfumeToProduct", fields: [parfumeId], references: [id])
  priceInCents   Int
  description    String
  dimensions     String
  img1url        String
  img2url        String
  img3url        String
  weightInGramms Int
  order          Order?    @relation(fields: [orderId], references: [id])
  orderId        String?
  isSold         Boolean  @default(false)

  @@index([categoryId])
  @@index([parfumeId])
}

model User {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  clerkId    String
  name       String?  @db.VarChar(100)
  email      String   @unique
  surname    String?  @db.VarChar(100)
  address    String?  @db.VarChar(255)
  postalcode String?  @db.VarChar(20)
  city       String?  @db.VarChar(100)
  telephone  String?  @db.VarChar(20)
  orders     Order[]
}

model Parfume {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String    @unique
  products  Product[] @relation("ParfumeToProduct")
  imgUrl    String
}

model Category {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String    @unique
  products    Product[] @relation("CategoryToProduct")
  howToUseUrl String
}

model Order {
  id               String    @id @default(uuid())
  pricePaidInCents Int
  isPaid           Boolean
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  userId           String
  user             User      @relation(fields: [userId], references: [id])
  products         Product[]
}
